1007 素数对猜想 (20分)
=======================

让我们定义 :math:`d_n` 为：:math:`d_n=p_n+1−p_n` ，其中 :math:`p_i` 是第i个素数。
显然有 :math:`d_1=1` ，且对于n>1有 :math:`d_n` 是偶数。“素数对猜想”认为“存在
无穷多对相邻且差为2的素数”。

现给定任意正整数 :math:`N(<10^5)` ，请计算不超过N的满足猜想的素数对的个数。

**输入格式:**

输入在一行给出正整数N。

**输出格式:**

在一行中输出不超过N的满足猜想的素数对的个数。

**输入样例**::

  20

**输出样例**::

  4

**C**

.. code-block:: c
   :linenos:

   #include<stdio.h>
   #include<stdbool.h>

   bool is_prime(int n)
   {
           for (int i = 2; i * i <= n; ++i) {
                   if (n % i == 0)
                           return false;
           }
           return true;
   }

   int main(void)
   {
           int n = 0, cnt = 0;

           scanf("%d", &n);
           for (int i = 3; i + 2 <= n; i += 2) {
                   if (is_prime(i) && is_prime(i + 2))
                           ++cnt;
           }

           printf("%d", cnt);

           return 0;
   }

**C++**

.. code-block:: c++
   :linenos:

   #include<iostream>

   bool isPrime(int n)
   {
       for (int i = 2; i * i <= n; ++i)
           if ( n % i == 0)
               return false;
       return true;
   }

   int main(void)
   {
       int n, cnt{0};
       std::cin >> n;
       for (int i = 5; i <= n; i += 2)
           if (isPrime(i) && isPrime(i - 2))
               ++cnt;
       std::cout << cnt << std::endl;

       return 0;
   }
